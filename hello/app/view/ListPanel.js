/*
 * File: app/view/ListPanel.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('PFC.view.ListPanel', {
    extend: 'Ext.Panel',
    alias: 'widget.listpanel',

    config: {
        layout: {
            type: 'fit'
        },
        items: [
            {
                xtype: 'list',
                itemId: 'procesosList',
                itemTpl: [
                    '<div class="nom">{nom}</div><div class="descripcio">{descripcio}</div>'
                ]
            },
            {
                xtype: 'toolbar',
                docked: 'bottom',
                items: [
                    {
                        xtype: 'button',
                        itemId: 'nouProces',
                        ui: 'action-round',
                        text: 'Nou proc√©s',
                        flex: 1
                    }
                ]
            }
        ],
        listeners: [
            {
                fn: 'onProcesosListPainted',
                event: 'painted',
                delegate: '#procesosList'
            },
            {
                fn: 'onNouProcesTap',
                event: 'tap',
                delegate: '#nouProces'
            }
        ]
    },

    onProcesosListPainted: function(component, options) {
        // Create Model
        Ext.define('Proces', {
            extend: "Ext.data.Model",
            fields: [
            {name: 'username', type: 'string'},
            {name: 'nom', type: 'string'},
            {name: 'descripcio', type: 'string'},
            {name: 'timestamp',type: 'date'}
            ],
            proxy: {
                id: 'procesDB', //Uses new user/timestamp
                type: 'syncstorage',
                key: 'proces'
            }
        });

        // Create store and assign to List
        var store = Ext.create('Ext.data.Store', {
            model: 'Proces',
            sorters: [ {
                property: 'timestamp',
                direction: 'DESC'
            } ],
            autoLoad: true
        });
        component.setStore(store);

        // Sync IO Setup
        Ext.io.setup({key: "proces"});
        Ext.io.init();

        // Sync data from localstorage
        store.sync();
    },

    onNouProcesTap: function(button, e, options) {
        button.up('#mainPanel').setActiveItem(1);
    }

});