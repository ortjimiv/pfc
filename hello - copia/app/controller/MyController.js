/*
 * File: app/controller/MyController.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('PFC.controller.MyController', {
    extend: 'Ext.app.Controller',
    config: {
        control: {
            "#procesosList": {
                itemtap: 'onListpanelTap'
            },
            "#nouProces": {
                tap: 'onNouprocesTap'
            },
            "#torna": {
                tap: 'onTornaTap'
            },
            "#logout": {
                tap: 'onLogoutTap'
            },
            "#etiquetesList": {
                itemtap: 'onEtiqueteslistTap'
            },
            "#subetiquetesList": {
                itemtap: 'onSubetiqueteslistTap'
            }
        }
    },

    onListpanelTap: function(dataview, index, target, record, e, options) {
        Ext.getCmp('loggedInUserName').setTitle("Procés "+record.get('nom'));
        var detall = Ext.getCmp('detailPanel');
        Ext.getCmp('mainPanel').animateTo('left');
        Ext.getCmp('listPanel').setHidden(true);
        Ext.getCmp('usuariPanel').setHidden(true);
        Ext.getCmp('torna').setHidden(false);

        if (detall) {
            detall.setData(record.data);
            Ext.getCmp('finestra').setActiveItem(detall);
        } else {
            Ext.getCmp('finestra').setActiveItem({
                xclass: 'PFC.view.detailPanel'
            });
        }
        Ext.getCmp('detailPanel').setData(record.data);
        /*
        Ext.getCmp('mainPanel').push({
        xtype: 'detailpanel',
        data: record.getData()
        });
        */
    },

    onNouprocesTap: function(button, e, options) {
        /*
        Ext.getCmp('mainPanel').push({
        xtype: 'addprocesform'
        });
        */
        var afegirProces = Ext.getCmp('addprocesform');
        Ext.getCmp('mainPanel').animateTo('left');
        Ext.getCmp('listPanel').setHidden(true);
        Ext.getCmp('usuariPanel').setHidden(true);
        Ext.getCmp('torna').setHidden(false);
        Ext.getCmp('loggedInUserName').setTitle("Nou procés");

        if (afegirProces) {
            Ext.getCmp('finestra').setActiveItem(afegirProces);
        } else {
            Ext.getCmp('finestra').setActiveItem({
                xclass: 'PFC.view.addProcesForm'
            });
        }
    },

    onTornaTap: function(button, e, options) {
        Ext.getCmp('mainPanel').animateTo('right');
        Ext.getCmp('listPanel').setHidden(false);
        Ext.getCmp('usuariPanel').setHidden(false);
        Ext.getCmp('torna').setHidden(true);
        Ext.getCmp('loggedInUserName').setTitle("Processos de treball");

        Ext.getCmp('finestra').removeAt(2);
    },

    onLogoutTap: function(button, e, options) {
        Ext.getCmp('loggedInUserName').setTitle("");
        var top = Ext.getCmp('viewport');
        top.down('#loginForm').reset();
        top.down('#procesosList').deselectAll();
        top.setActiveItem(0);
    },

    onEtiqueteslistTap: function(dataview, index, target, record, e, options) {
        Ext.getCmp('subetiquetesList').deselectAll();
        Ext.getCmp('listPanel').deselectAll();

        Ext.getCmp('subetiquetesList').getStore().filter('etiquetaTipus_id',record.get("id"));

        //desem els id's de les etiquetes
        var j=[];
        for (i=0;i<Ext.getStore('etiquetaJson').getCount();i++){
            j[i]=Ext.getStore('etiquetaJson').getAt(i).get('id');
        }

        //cerquem aquelles etiquetes del tipus seleccionat
        Ext.getStore('associatJson').clearFilter();
        Ext.getStore('associatJson').filterBy(function(record) {
            return (j.indexOf(record.get('etiqueta_id'))!=-1);
        });

        //cerquem a la taula associat les etiquetes segons el filtre principal
        var k=[];
        for (i=0;i<Ext.getStore('associatJson').getCount();i++){
            k[i]=Ext.getStore('associatJson').getAt(i).get('proces_id');
        }

        //Ext.Msg.alert('ID\'s',k);

        //filtrem pels processos que compleixen el filtre
        Ext.getStore('procesJson').clearFilter();
        Ext.getStore('procesJson').filterBy(function(record) {
            return (k.indexOf(record.get('id'))!=-1);
        });
    },

    onSubetiqueteslistTap: function(dataview, index, target, record, e, options) {
        Ext.getCmp('listPanel').deselectAll();

        var j=[];
        j[0]=record.get("id");

        //cerquem aquelles etiquetes del tipus seleccionat
        Ext.getStore('associatJson').clearFilter();
        Ext.getStore('associatJson').filterBy(function(record) {
            return (j.indexOf(record.get('etiqueta_id'))!=-1);
        });

        //cerquem a la taula associat les etiquetes segons el filtre principal
        var k=[];
        for (i=0;i<Ext.getStore('associatJson').getCount();i++){
            k[i]=Ext.getStore('associatJson').getAt(i).get('proces_id');
        }

        //Ext.Msg.alert('ID\'s',k);

        //filtrem pels processos que compleixen el filtre
        Ext.getStore('procesJson').clearFilter();
        Ext.getStore('procesJson').filterBy(function(record) {
            return (k.indexOf(record.get('id'))!=-1);
        });
    }

});