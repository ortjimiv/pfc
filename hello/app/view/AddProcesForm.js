/*
 * File: app/view/AddProcesForm.js
 *
 * This file was generated by Sencha Architect version 2.0.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.0.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.0.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('PFC.view.AddProcesForm', {
    extend: 'Ext.form.Panel',
    alias: 'widget.addprocesform',

    config: {
        layout: {
            pack: 'center',
            type: 'vbox'
        },
        items: [
            {
                xtype: 'fieldset',
                title: 'Afegir un nou procés',
                items: [
                    {
                        xtype: 'textfield',
                        label: 'Nom',
                        name: 'nom',
                        required: true
                    },
                    {
                        xtype: 'textareafield',
                        label: 'Descripció',
                        name: 'descripcio'
                    }
                ]
            },
            {
                xtype: 'button',
                itemId: 'crea',
                ui: 'confirm',
                text: 'Crea'
            },
            {
                xtype: 'button',
                itemId: 'cancel',
                ui: 'decline',
                text: 'Cancel·la'
            }
        ],
        listeners: [
            {
                fn: 'onSubmitTap',
                event: 'tap',
                delegate: '#crea'
            },
            {
                fn: 'onCancelTap',
                event: 'tap',
                delegate: '#cancel'
            }
        ]
    },

    onSubmitTap: function(button, e, options) {
        var form = button.up('formpanel'),
        mainPanel = form.up('#mainPanel'),
        store = mainPanel.down('#expenseList').getStore(),
        ts = new Date(),
        expenseRecord = form.getValues();

        // Add additional data
        expenseRecord.username = PFC.username;
        expenseRecord.timestamp = ts;

        // Send message to the queue - no relation to the store
        Ext.io.send('queue/expense', { 
            'type': 'newexpense',
            'storeid': 'expenseDB',
            'username': expenseRecord.username,
            'merchant': expenseRecord.merchant,
            'category': expenseRecord.category,
            'amount': expenseRecord.amount,
            'timestamp': Ext.Date.format(ts, 'Y-m-d g.i')
        });

        //Store to local storage and sync to remote syncstorage
        store.add(expenseRecord);
        store.sync();

        //Confirmation
        Ext.Msg.alert(null, "Expense Added Successfully", function() {
            //Back to list
            form.reset();
            mainPanel.setActiveItem(0);
        });
    },

    onCancelTap: function(button, e, options) {
        button.up('formpanel').reset();
        button.up('#mainPanel').setActiveItem(0);
    }

});